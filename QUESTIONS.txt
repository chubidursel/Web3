>>>TypeScript
    1.window.ethereum (main\src\abi\walletProvider.ts)
    2. Toss the props to react component (main\src\pages\Token\ERC721_components\NftCard.tsx) // Faq
        >should i declare all props as a type in types folder? 
    3. Set up global types
    4. HeaderNew

>>> REACT
    2. Set Up global font for all text
    3. Change pop up text on the main page

>>>> Hardhat
    1. Import openzeppelin (../../node)

>>>> IPFS
    1.How to set the ipfs link to smart contract ERC721
    2. What happend if all nodes with ur file  will cut off from the network, so i can't reach my files?
    
>>>> .env !!!!!

    1. check wssWallet <<< it doesn't work =(
    2. ADDRESSS local smart contract
   

IDEA!!!!!!!!!!!
1. Add big number to Convertor
2. Loader to NFT pic



--------------------------------- TASKS -------------------------
DAN
> Flex wrap main menu gonna looks okay on small devices  ❓ >> bg and metamask with header
> token function componet reafctor  ✅
> NFT card reaftor button and slice address ✅
> refactor block to ping in token and other ✅
> ERRORS | SUCC AND LOADER INSTAED BTN !!! refacrot all erorrs in all functional component where we interact with ETH to one stuly
        ✅ exchange ||  valut ison Alex || tokenerc20 has its own err || other component 
> lines for PROXY ✅ || to set up line we gonna use Jq query and, tbh i like how does it look now
> config ❌ << again no result
> link to github inside feedback  ✅ << change main FAQ
> all mistakes from TypeScript 🏃
> Set up types TS ?? 🏃
>alret if no MetaMask ✅

ALEX 
> DEFI main menu refactor blocks
> Create modal -> center | create modal for big text (modalForBig)
>  NFT main page slice ipfs address and owner address after check info
> NFT mian -> do not show modul with card if input is invalid
> NFT main work out with design 
> VAULT make like in Exchange (set err and put div with result inside the block) and refactor
> DAO 1.Initian btn / 2. btn refrash to update useEffect /3. btn vote inside table (looks nice)  /4. vote module date to normal and slice address with copy func
> Auction > refactor table  | refrash btn update useEffect | Refactor auction module so all info only inside the container
> background colour 
> concet metaMAsk and Header 
> 



FOR ERRORS >>>>>>>>>>>>>>>>>>>

 const [result, setResult] = useState('');

>>> inside the func 
    setResult("Please sign the transation in MetaMask 📝 and wait till this tx will be confirmed in blockchain")

    ... code ...

    setResult(`✅ Complete! You just bought ${cwt} CWT`)
    setTimeout(() => {setResult('')}, 3000)

    catch (error) {
      console.log(error)
      setResult('Oii wei, we got problems! 😞')
      setTimeout(() => {setResult('')}, 4000)

>> RETURN
...
<div className='flex justify-center'> {result && <h1 className='font-bold mt-3 bg-yellow-100 w-full py-2 text-center  px-1 rounded-xl text-purple-900 text-xl '>{result}</h1>}   </div>

! TIPS
<input type='number' min='0' className='rounded-xl text-center p-1 hover:shadow-lg'  .....